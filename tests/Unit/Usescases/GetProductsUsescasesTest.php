<?php


namespace Tests\Unit\Usescases;


use App\Repositories\Contracts\ProductRepositoryInterface;
use App\Usescases\Product\GetProductsUsecase;
use mysql_xdevapi\Collection;
use Tests\TestCase;

class GetProductsUsescasesTest extends TestCase
{

    /**
     * @var \Mockery\MockInterface|ProductRepositoryInterface
     */
    private $productRepository;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->productRepository = \Mockery::mock(ProductRepositoryInterface::class);
    }


    public function tearDown(): void
    {
        \Mockery::close();
        parent::tearDown(); // TODO: Change the autogenerated stub
    }


    public function test_all_products()
    {
        $this->productRepository->shouldReceive('all')->andReturn(new \Illuminate\Database\Eloquent\Collection());

        $usecase = new GetProductsUsecase($this->productRepository);
        $result = $usecase->handle();

        $this->assertInstanceOf(\Illuminate\Support\Collection::class, $result);
    }

}