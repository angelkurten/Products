<?php


namespace Tests\Unit\Usescases;


use App\Repositories\Contracts\ProductRepositoryInterface;
use App\Usescases\Product\AddProductUsecase;
use App\Usescases\Product\GetProductsUsecase;
use mysql_xdevapi\Collection;
use Tests\TestCase;
use App\Entities\Product;

class AddProductUsescasesTest extends TestCase {
    /**
     * @var \Mockery\MockInterface|ProductRepositoryInterface
     */
    private $productRepository;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->productRepository = \Mockery::mock(ProductRepositoryInterface::class);
    }

    public function tearDown(): void
    {
        \Mockery::close();
        parent::tearDown(); // TODO: Change the autogenerated stub
    }

    public function test_add_product()
    {
        //
        $id = 7676;
        $stock = 7;
        $this->productRepository
            ->shouldReceive('addStock')
            ->with($id, $stock)
            ->andReturn(Product::class);

        $usecase = new AddProductUsecase($this->productRepository);
        $result = $usecase->handle($id, $stock);

        $this->assertInstanceOf(Product::class, $result);
    }
}